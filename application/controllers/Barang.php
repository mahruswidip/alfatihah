<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Barang extends CI_Controller
{
    public function __construct()
    {
        parent::__construct();
        $this->load->model('Barang_model');
        $this->load->model('Kategori_model');
        $this->load->model('Users_model');
    }

    /*
     * Listing of barang
     */
    public function index()
    {
        $params['limit'] = RECORDS_PER_PAGE;
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;

        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('barang/index?');
        $config['total_rows'] = $this->Barang_model->get_all_barang_count();
        $this->pagination->initialize($config);

        $user_level = $this->session->userdata('user_level');
        $user_id = $this->session->userdata('user_id');

        $data['barang'] = $this->Barang_model->get_all_barang($params);

        $data['_view'] = 'barang/index';
        $this->load->view('layouts/main', $data);
    }

    /*
     * Adding a new barang
     */

    // public function add()
    // {
    //     $data['kategori_list'] = $this->Kategori_model->get_all_kategori();

    //     if ($this->input->post()) {
    //         $kategori = $this->input->post('id_kategori');
    //         $nama_barang = $this->input->post('nama_barang');
    //         $jumlah = $this->input->post('jumlah');
    //         $satuan = $this->input->post('satuan');
    //         $keterangan = $this->input->post('keterangan');

    //         $kategori_id = $this->Kategori_model->get_or_add_kategori($kategori);

    //         // Only add barang if the kategori_id is not null
    //         if ($kategori_id) {
    //             $params = array(
    //                 'fk_id_kategori' => $kategori_id,
    //                 'nama_barang' => $nama_barang,
    //                 'jumlah' => $jumlah,
    //                 'satuan' => $satuan,
    //                 'keterangan' => $keterangan,
    //             );

    //             $this->Barang_model->add_barang($params);
    //             redirect('barang/index');
    //         } else {
    //             // If kategori_id is null, the user did not select a valid kategori
    //             $this->session->set_flashdata('error', 'Please select a valid kategori.');
    //             redirect('barang/add');
    //         }
    //     } else {
    //         $data['_view'] = 'barang/add';
    //         $this->load->view('layouts/main', $data);
    //     }
    // }

    public function add()
    {
        $data['kategori_list'] = $this->Kategori_model->get_all_kategori();

        if ($this->input->post()) {
            $kategori = $this->input->post('id_kategori');
            $nama_barang = $this->input->post('nama_barang');
            $jumlah = $this->input->post('jumlah');
            $satuan = $this->input->post('satuan');
            $keterangan = $this->input->post('keterangan');

            $kategori_id = $this->Kategori_model->get_or_add_kategori($kategori);



            // Only add barang if kategori already exists
            if ($kategori_id !== null) {
                $params = array(
                    'fk_id_kategori' => $kategori_id,
                    'nama_barang' => $nama_barang,
                    'jumlah' => $jumlah,
                    'satuan' => $satuan,
                    'keterangan' => $keterangan,
                );

                // var_dump($kategori_id);
                // exit();
                $this->Barang_model->add_barang($params);
            }

            redirect('barang/index');
        } else {
            $data['_view'] = 'barang/add';
            $this->load->view('layouts/main', $data);
        }
    }

    public function add_kategori()
    {

        $kategori = $this->input->post('id_kategori');
        if (!empty($kategori)) {
            $data = array(
                'nama_kategori' => $kategori,
            );
            $insert = $this->Barang_model->insert_kategori($data);
            if ($insert) {
                echo $this->db->insert_id();
            } else {
                echo 'Error';
            }
        } else {
            echo 'Kategori cannot be empty';
        }
    }

    /*
     * Editing a barang
     */

    public function edit($id_barang)
    {
        if ($this->input->post()) {
            $kategori = $this->input->post('id_kategori');
            $nama_barang = $this->input->post('nama_barang');
            $jumlah = $this->input->post('jumlah');
            $satuan = $this->input->post('satuan');
            $keterangan = $this->input->post('keterangan');

            $kategori_id = $this->Kategori_model->get_or_add_kategori($kategori);

            // Only update barang if kategori already exists
            if ($kategori_id !== null) {
                $params = array(
                    'fk_id_kategori' => $kategori_id,
                    'nama_barang' => $nama_barang,
                    'jumlah' => $jumlah,
                    'satuan' => $satuan,
                    'keterangan' => $keterangan,
                );

                // var_dump('Controller Barang Edit When NOT EXISTT');
                // print_r($params);
                // exit();

                $this->Barang_model->update_barang($id_barang, $params);
                redirect('barang/index');
            } else {
                $data['error'] = 'Kategori not found';
            }
        }

        $data['barang'] = $this->Barang_model->get_barang($id_barang);
        $data['kategori_list'] = $this->Kategori_model->get_all_kategori();
        $data['_view'] = 'barang/edit';
        $this->load->view('layouts/main', $data);
    }

    /*
     * Deleting barang
     */
    public function remove($id_barang)
    {
        $barang = $this->Barang_model->get_barang($id_barang);

        // check if the barang exists before trying to delete it
        if (isset($barang['id_barang'])) {
            $this->Barang_model->delete_barang($id_barang);
            redirect('barang/index');
        } else {
            show_error('The barang you are trying to delete does not exist.');
        }

    }
}