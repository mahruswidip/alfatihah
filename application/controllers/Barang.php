<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Barang extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Barang_model');
        $this->load->model('Kategori_model');
        $this->load->model('Users_model');
    }

    /*
     * Listing of barang
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE;
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;

        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('barang/index?');
        $config['total_rows'] = $this->Barang_model->get_all_barang_count();
        $this->pagination->initialize($config);

        $user_level = $this->session->userdata('user_level');
        $user_id = $this->session->userdata('user_id');

        $data['barang'] = $this->Barang_model->get_all_barang($params);
        
        $data['_view'] = 'barang/index';
        $this->load->view('layouts/main', $data);
    }
    
    /*
    * Adding a new barang
    */
    public function add()
{
    $data['kategori_list'] = $this->Kategori_model->get_all_kategori();

    if ($this->input->post()) {
        $kategori = $this->input->post('fk_id_kategori');
        $nama_barang = $this->input->post('nama_barang');
        $jumlah = $this->input->post('jumlah');
        $satuan = $this->input->post('satuan');
        $keterangan = $this->input->post('keterangan');

        $kategori_id = $this->Kategori_model->get_or_add_kategori($kategori);

        $params = array(
            'fk_id_kategori' => $kategori_id,
            'nama_barang' => $nama_barang,
            'jumlah' => $jumlah,
            'satuan' => $satuan,
            'keterangan' => $keterangan,
        );

        $this->Barang_model->add_barang($params);
        redirect('barang/index');
    } else {
        $data['_view'] = 'barang/add';
        $this->load->view('layouts/main', $data);
    }
}

function add_kategori($params)
{
    if (!empty($params['nama_kategori'])) {
        $this->db->insert('kategori', $params);
        return $this->db->insert_id();
    } else {
        return null;
    }
}

    /*
     * Editing a barang
     */


    function edit($id_barang)
    {
        // check if the barang exists before trying to edit it
        $data['barang'] = $this->Barang_model->get_barang($id_barang);

        if (isset($data['barang']['id_barang'])) {
            if (isset($_POST) && count($_POST) > 0) {
                $params = array(
                    'fk_id_kategori' => $this->input->post('fk_id_kategori'),
                    'nama_barang' => $this->input->post('nama_barang'),
                    'jumlah' => $this->input->post('jumlah'),
                    'satuan' => $this->input->post('satuan'),
                    'keterangan' => $this->input->post('keterangan'),
                );

                $this->Barang_model->update_barang($id_barang, $params);
                redirect('barang/index');
            } else {
                $data['_view'] = 'barang/edit';
                $this->load->view('layouts/main', $data);
            }
        } else
            show_error('The barang you are trying to edit does not exist.');
    }

    /*
     * Deleting barang
     */
    function remove($id_barang)
    {
        $barang = $this->Barang_model->get_barang($id_barang);

        // check if the barang exists before trying to delete it
        if (isset($barang['id_barang'])) {
            $this->Barang_model->delete_barang($id_barang);
            redirect('barang/index');
        } else
            show_error('The barang you are trying to delete does not exist.');
    }
}